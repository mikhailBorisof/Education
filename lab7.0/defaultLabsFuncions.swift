//
//  defaultFunc.swift
//  
//  Created by misha borisov on 19.04.2022.
//  Updated by misha borisov on 17.05.2022.
//
import Foundation
/*    ------------- –§—É–Ω–∫—Ü–∏–∏ –≤–≤–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —á–∏—Å–µ–ª –≤ –∫–æ–Ω—Å–æ–ª—å -------------    */
/**
 –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤–≤–µ–¥–µ–Ω–Ω–æ–µ –∏–º –ù–ï–û–¢–†–ò–¶–ê–¢–ï–õ–¨–ù–û–ï —á–∏—Å–ª–æ —Ç–∏–ø–∞ Int
 - Warning: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞, –≤–≤–æ–¥–∏–º–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —á–∏—Å–ª–∞: 20
 - Warning: –ü–æ–∑–≤–æ–ª—è–µ—Ç –≤–≤–æ–¥–∏—Ç—å —Ç–æ–ª—å–∫–æ –ù–ï–û–¢–†–ò–¶–ê–¢–ï–õ–¨–ù–´–ï —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞
 - Warning: –ü–æ–∑–≤–æ–ª—è–µ—Ç –≤–≤–æ–¥–∏—Ç—å –Ω–æ–ª—å 
 - Returns: –í–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤–≤–µ—Å—Ç–∏ —á–∏—Å–ª–æ –µ—â–µ —Ä–∞–∑
 */
func enterNumberUnsignedInt() -> Int {
    var answer:String // –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    var isDataPerfect: Bool // —Ñ–ª–∞–≥ –Ω—Ä–∞–≤–∏—Ç—Å—è –ª–∏ –Ω–∞–º –≤–≤–æ–¥–∏–º–∞—è —Å—Ç—Ä–æ–∫–∞
    // –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –∑–∞–ø–∏—Å–∏ Ascii –∫–æ–¥–∞ —Å–∏–º–≤–æ–ª–∞
    var temp: UInt8 // —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω—ã–π –±–µ–∑–∑–Ω–∞–∫–æ–≤—ã–π —Ç–∏–ø –∑–∞–Ω–∏–º–∞—é—â–∏–π 8 –±–∏—Ç, –º–æ–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å [0,255], —Ç–æ –µ—Å—Ç—å 2 –≤ –≤–æ—Å—å–º–æ–π —á–∏—Å–µ–ª
    var index:Int // –∏–Ω–¥–µ–∫—Å —Å–∏–º–≤–æ–ª–∞ –≤ —Å—Ç—Ä–æ–∫–µ, —Ç–∞–∫ –∫–∞–∫ –≤ swift –Ω–µ–ª—å–∑—è –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ —Å–∏–º–≤–æ–ª—É –ø–æ –∏–Ω–¥–µ–∫—Å—É

  repeat{
        isDataPerfect = true
        //print("\n–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ")
        print(" –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: ", terminator: "") // terminator - –ø–∞—Ä–∞–º–µ—Ç—Ä —Ç–æ–≥–æ, —á—Ç–æ –±—É–¥–µ—Ç –ø–æ—Å–ª–µ –ø–µ—á–∞—Ç–∏, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –Ω–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞ ("\n")

        answer = readLine()! // —á–∏—Ç–∞–µ—Ç –ø–æ—Ç–æ–∫ –≤–≤–æ–¥–∞ –∏ —Å–æ–∑–¥–∞–µ—Ç –æ–±—å–µ–∫—Ç —Ç–∏–ø–∞ Optional<String>
        
        // –µ—Å–ª–∏ –µ—Å–ª–∏ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π –≤–≤–æ–¥
        if answer.count > 20 {
            print(" ‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –í–≤–æ–¥ –∑–Ω–∞—á–µ–Ω–∏—è –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–µ–≤—ã—à–∞—Ç—å 20 —Å–∏–º–≤–æ–ª–æ–≤!")
            if answer.count % 10 == 1 && answer.count != 11 {
                print(" –í—ã –≤–≤–µ–ª–∏ \(answer.count) —Å–∏–º–≤–æ–ª")
            }
            else{
                if 1 < answer.count % 10 && answer.count % 10 < 5  && answer.count != 12 && answer.count != 13 && answer.count != 14{
                    print(" –í—ã –≤–≤–µ–ª–∏ \(answer.count) —Å–∏–º–≤–æ–ª–∞")
                }
                else{
                    print(" –í—ã –≤–≤–µ–ª–∏ \(answer.count) —Å–∏–º–≤–æ–ª–æ–≤")
                }
            }
            isDataPerfect = false
            continue /* –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –∏—Ç–µ—Ä–∞—Ü–∏—é —Ç–µ–ª–∞ —Ü–∏–∫–ª–∞ –±–µ–∑
             –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–µ–ª–∞ —Ü–∏–∫–ª–∞ */
        }
        /*    ---------------------------------------    */
        // –µ—Å–ª–∏ —Å–æ–¥–µ—Ä–∂–∏—Ç —á—Ç–æ-—Ç–æ –∫—Ä–æ–º–µ –Ω—É–∂–Ω—ã—Ö –Ω–∞–º —Å–∏–º–≤–æ–ª–æ–≤ 0123456789 -  48-57 || 32 - –µ—â–µ –ø—Ä–æ–±–µ–ª
        temp = 0 // –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –∑–∞–ø–∏—Å–∏ Ascii –∫–æ–¥–∞ —Å–∏–º–≤–æ–ª–∞
        index = 0 // –∏–Ω–¥–µ–∫—Å —Å–∏–º–≤–æ–ª–∞ –≤ —Å—Ç—Ä–æ–∫–µ, —Ç–∞–∫ –∫–∞–∫ –≤ swift –Ω–µ–ª—å–∑—è –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ —Å–∏–º–≤–æ–ª—É –ø–æ –∏–Ω–¥–µ–∫—Å—É
        for char in answer {
            index += 1
            if(char.asciiValue != nil) {
                temp = char.asciiValue!
                // –µ—Å–ª–∏ –Ω–µ–ø–æ–¥—Ö–æ–¥—è—â–∏–π –Ω–∞–º –∑–Ω–∞–∫
                if !( 48 <= temp && temp <= 57 || temp == 32 ) {
                    print(" ‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –í–≤–æ–¥–∏—Ç—å –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞")
                    print(" –ë–µ–∑ —Ç–æ—á–µ–∫ –∏ –∑–∞–ø—è—Ç—ã—Ö")
                    isDataPerfect = false
                    break /* –≤—ã—Ö–æ–¥ –∏–∑ —Ü–∏–∫–ª–∞ */
                }
            }
            else {
                isDataPerfect = false
                print(" ‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –í–≤–æ–¥–∏—Ç—å –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞!")
                break /* –≤—ã—Ö–æ–¥ –∏–∑ —Ü–∏–∫–ª–∞ */
            }
        }
        // –µ—Å–ª–∏ –Ω–∞–ø–∏—Å–∞–ª–∏ —á–∏—Å–ª–æ —Å –ø—Ä–æ–±–µ–ª–∞–º–∏
        if answer.contains(" ") {
            answer = answer.replacingOccurrences(of: " ", with: "") // –∑–∞–º–µ–Ω—è–µ—Ç –ø–æ—è–≤–ª–µ–Ω–∏—è (of) –≤ —Å—Ç—Ä–æ–∫–µ 
        }
        // –µ—Å–ª–∏ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π –≤–≤–æ–¥
        if answer.count < 1 {
            print(" ‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –í—ã –≤–æ–æ–±—â–µ –Ω–∏—á–µ–≥–æ –Ω–µ –≤–≤–µ–ª–∏ !")
            print(" –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑, —É –≤–∞—Å –ø–æ–ª—É—á–∏—Ç—Å—è !")
            isDataPerfect = false
            continue /* –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –∏—Ç–µ—Ä–∞—Ü–∏—é —Ç–µ–ª–∞ —Ü–∏–∫–ª–∞ –±–µ–∑
             –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–µ–ª–∞ —Ü–∏–∫–ª–∞ */
        }
        if isDataPerfect && Double(answer) == nil {
            print(" üõë –û—à–∏–±–∫–∞: –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏ –≤–≤–æ–¥–∞")
        }
    }
    while !isDataPerfect // –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤ —Å–ª—É—á–∞–µ –ø–ª–æ—Ö–∏—Ö –¥–∞–Ω–Ω—ã—Ö

    // —É–±–∏—Ä–∞–µ–º –º–∏–Ω—É—Å –ø–µ—Ä–µ–¥ –Ω—É–ª–µ–º
    if Double(answer)! == 0 && answer.contains("-") {
        answer = answer.replacingOccurrences(of: "-", with: "")
    }
    print(" üü¢ –í–∞—à–µ —á–∏—Å–ª–æ: \(Int(answer)! )")
    return Int(answer)! // –ø–µ—Ä–µ–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–∞–ª—å—à–µ, –≤ –≤–∏–¥–µ —Ç–∏–ø–∞ Double
}
/**
 –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤–≤–µ–¥–µ–Ω–Ω–æ–µ –∏–º –ù–ï–û–¢–†–ò–¶–ê–¢–ï–õ–¨–ù–û–ï —á–∏—Å–ª–æ —Ç–∏–ø–∞ Double
 - Warning: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞, –≤–≤–æ–¥–∏–º–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —á–∏—Å–ª–∞: 20
 - Warning: –ü–æ–∑–≤–æ–ª—è–µ—Ç –≤–≤–æ–¥–∏—Ç—å —Ç–æ–ª—å–∫–æ –ù–ï–û–¢–†–ò–¶–ê–¢–ï–õ–¨–ù–´–ï —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞
 - Warning: –ü–æ–∑–≤–æ–ª—è–µ—Ç –≤–≤–æ–¥–∏—Ç—å –Ω–æ–ª—å
 - Returns: –í–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤–≤–µ—Å—Ç–∏ —á–∏—Å–ª–æ –µ—â–µ —Ä–∞–∑
 */
func enterNumberUnsignedDoubleWithZero() -> Double {
    var answer:String // –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    var isDataPerfect: Bool // —Ñ–ª–∞–≥ –Ω—Ä–∞–≤–∏—Ç—Å—è –ª–∏ –Ω–∞–º –≤–≤–æ–¥–∏–º–∞—è —Å—Ç—Ä–æ–∫–∞
    // –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –∑–∞–ø–∏—Å–∏ Ascii –∫–æ–¥–∞ —Å–∏–º–≤–æ–ª–∞
    var temp: UInt8 // —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω—ã–π –±–µ–∑–∑–Ω–∞–∫–æ–≤—ã–π —Ç–∏–ø –∑–∞–Ω–∏–º–∞—é—â–∏–π 8 –±–∏—Ç, –º–æ–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å [0,255], —Ç–æ –µ—Å—Ç—å 2 –≤ –≤–æ—Å—å–º–æ–π —á–∏—Å–µ–ª
    var povtor:Int // –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–≤—Ç–æ—Ä–æ–≤ –∑–∞–ø—è—Ç–æ–π –∏ —Ç–æ—á–∫–∏ –≤ —Å—Ç—Ä–æ–∫–µ
    var index:Int // –∏–Ω–¥–µ–∫—Å —Å–∏–º–≤–æ–ª–∞ –≤ —Å—Ç—Ä–æ–∫–µ, —Ç–∞–∫ –∫–∞–∫ –≤ swift –Ω–µ–ª—å–∑—è –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ —Å–∏–º–≤–æ–ª—É –ø–æ –∏–Ω–¥–µ–∫—Å—É

    repeat{
        isDataPerfect = true
        print(" –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: ", terminator: "") // terminator - –ø–∞—Ä–∞–º–µ—Ç—Ä —Ç–æ–≥–æ, —á—Ç–æ –±—É–¥–µ—Ç –ø–æ—Å–ª–µ –ø–µ—á–∞—Ç–∏, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –Ω–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞ ("\n")

        answer = readLine()! // —á–∏—Ç–∞–µ—Ç –ø–æ—Ç–æ–∫ –≤–≤–æ–¥–∞ –∏ —Å–æ–∑–¥–∞–µ—Ç –æ–±—å–µ–∫—Ç —Ç–∏–ø–∞ Optional<String>
        
        // –µ—Å–ª–∏ –µ—Å–ª–∏ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π –≤–≤–æ–¥
        if answer.count > 20 {
            print(" ‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –í–≤–æ–¥ –∑–Ω–∞—á–µ–Ω–∏—è –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–µ–≤—ã—à–∞—Ç—å 20 —Å–∏–º–≤–æ–ª–æ–≤!")
            if answer.count % 10 == 1 && answer.count != 11 {
                print(" –í—ã –≤–≤–µ–ª–∏ \(answer.count) —Å–∏–º–≤–æ–ª")
            }
            else{
                if 1 < answer.count % 10 && answer.count % 10 < 5  && answer.count != 12 && answer.count != 13 && answer.count != 14{
                    print(" –í—ã –≤–≤–µ–ª–∏ \(answer.count) —Å–∏–º–≤–æ–ª–∞")
                }
                else{
                    print(" –í—ã –≤–≤–µ–ª–∏ \(answer.count) —Å–∏–º–≤–æ–ª–æ–≤")
                }
            }
            isDataPerfect = false
            continue /* –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –∏—Ç–µ—Ä–∞—Ü–∏—é —Ç–µ–ª–∞ —Ü–∏–∫–ª–∞ –±–µ–∑
             –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–µ–ª–∞ —Ü–∏–∫–ª–∞ */
        }
        /*    ---------------------------------------    */
        // –µ—Å–ª–∏ —Å–æ–¥–µ—Ä–∂–∏—Ç —á—Ç–æ-—Ç–æ –∫—Ä–æ–º–µ –Ω—É–∂–Ω—ã—Ö –Ω–∞–º —Å–∏–º–≤–æ–ª–æ–≤ 0123456789 -  48-57 || 44 - , 46 - .) || –µ—â–µ –ø—Ä–æ–±–µ–ª
        temp = 0 // –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –∑–∞–ø–∏—Å–∏ Ascii –∫–æ–¥–∞ —Å–∏–º–≤–æ–ª–∞
        povtor = 0 // –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–≤—Ç–æ—Ä–æ–≤ –∑–∞–ø—è—Ç–æ–π –∏ —Ç–æ—á–∫–∏ –≤ —Å—Ç—Ä–æ–∫–µ
        index = 0 // –∏–Ω–¥–µ–∫—Å —Å–∏–º–≤–æ–ª–∞ –≤ —Å—Ç—Ä–æ–∫–µ, —Ç–∞–∫ –∫–∞–∫ –≤ swift –Ω–µ–ª—å–∑—è –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ —Å–∏–º–≤–æ–ª—É –ø–æ –∏–Ω–¥–µ–∫—Å—É
        for char in answer {
            index += 1
            if(char.asciiValue != nil) {
                temp = char.asciiValue!
                // –µ—Å–ª–∏ –Ω–µ–ø–æ–¥—Ö–æ–¥—è—â–∏–π –Ω–∞–º –∑–Ω–∞–∫
                if !(temp != 47 && 46 <= temp && temp <= 57 || temp == 32 || temp == 44) {
                    print(" ‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –í–≤–æ–¥–∏—Ç—å –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ —á–∏—Å–ª–∞ –∏ –∑–Ω–∞–∫–∏:  '.' , ',' ")
                    isDataPerfect = false
                    break /* –≤—ã—Ö–æ–¥ –∏–∑ —Ü–∏–∫–ª–∞ */
                }
                // —Ç–æ—á–∫–∏ –∏ –∑–∞–ø—è—Ç—ã–µ –Ω–µ –¥–æ–ª–∂–Ω—ã –ø–æ–≤—Ç–æ—Ä—è—Ç—Å—è
                if temp == 44 || temp == 46 { povtor += 1 }
            }
            else {
                isDataPerfect = false
                print(" ‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –í–≤–æ–¥–∏—Ç—å –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ —á–∏—Å–ª–∞ –∏ –∑–Ω–∞–∫–∏: '.' , ',' !")
                break /* –≤—ã—Ö–æ–¥ –∏–∑ —Ü–∏–∫–ª–∞ */
            }
            // –µ—Å–ª–∏ –≤–≤–µ–ª–∏ —Ç–æ–ª—å–∫–æ . , - —Ç–æ –¥–æ–±–∞–≤–∏–º –∏–º –Ω–æ–ª—å
            if answer.count == 1 && ( temp == 44 || temp == 46){ answer.append("0")}
            // —Ç–æ—á–∫–∏ –∏ –∑–∞–ø—è—Ç—ã–µ –Ω–µ –¥–æ–ª–∂–Ω—ã –ø–æ–≤—Ç–æ—Ä—è—Ç—Å—è –±–æ–ª—å—à–µ –æ–¥–Ω–æ–≥–æ —Ä–∞–∑–∞
            if povtor > 1 {
                print(" ‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –ú–æ–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ —Ç–æ–ª—å–∫–æ –æ–¥–Ω—É –∑–∞–ø—è—Ç—É—é –∏–ª–∏ —Ç–æ—á–∫—É!")
                print(" –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑, —É –≤–∞—Å –ø–æ–ª—É—á–∏—Ç—Å—è!")
                isDataPerfect = false
                continue /* –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –∏—Ç–µ—Ä–∞—Ü–∏—é —Ç–µ–ª–∞ —Ü–∏–∫–ª–∞ –±–µ–∑
                 –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–µ–ª–∞ —Ü–∏–∫–ª–∞ */
            }
        }
        // –µ—Å–ª–∏ –Ω–∞–ø–∏—Å–∞–ª–∏ —á–∏—Å–ª–æ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é
        if answer.contains(",") {
            answer = answer.replacingOccurrences(of: ",", with: ".")
        }
        // –µ—Å–ª–∏ –Ω–∞–ø–∏—Å–∞–ª–∏ —á–∏—Å–ª–æ —Å –ø—Ä–æ–±–µ–ª–∞–º–∏
        if answer.contains(" ") {
            answer = answer.replacingOccurrences(of: " ", with: "")
        }
        // –µ—Å–ª–∏ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π –≤–≤–æ–¥
        if answer.count < 1 {
            print(" ‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –í—ã –≤–æ–æ–±—â–µ –Ω–∏—á–µ–≥–æ –Ω–µ –≤–≤–µ–ª–∏ !")
            print(" –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑, —É –≤–∞—Å –ø–æ–ª—É—á–∏—Ç—Å—è !")
            isDataPerfect = false
            continue /* –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –∏—Ç–µ—Ä–∞—Ü–∏—é —Ç–µ–ª–∞ —Ü–∏–∫–ª–∞ –±–µ–∑
             –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–µ–ª–∞ —Ü–∏–∫–ª–∞ */
        }
        if isDataPerfect && Double(answer) == nil {
            print(" üõë –û—à–∏–±–∫–∞: –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏ –≤–≤–æ–¥–∞")
        }
    }
    while !isDataPerfect // –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤ —Å–ª—É—á–∞–µ –ø–ª–æ—Ö–∏—Ö –¥–∞–Ω–Ω—ã—Ö

    print(" üü¢ –í–∞—à–µ —á–∏—Å–ª–æ: \(Double(answer)! )")
    return Double(answer)! // –ø–µ—Ä–µ–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–∞–ª—å—à–µ, –≤ –≤–∏–¥–µ —Ç–∏–ø–∞ Double
}
/**
–§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤–≤–µ–¥–µ–Ω–Ω–æ–µ –∏–º –ü–û–õ–û–ñ–ò–¢–ï–õ–¨–ù–û–ï —á–∏—Å–ª–æ —Ç–∏–ø–∞ Double
- Warning: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞, –≤–≤–æ–¥–∏–º–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —á–∏—Å–ª–∞: 20
- Warning: –ü–æ–∑–≤–æ–ª—è–µ—Ç –≤–≤–æ–¥–∏—Ç—å —Ç–æ–ª—å–∫–æ –ü–û–õ–û–ñ–ò–¢–ï–õ–¨–ù–´–ï —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞
- Warning: –ù–ï –ü–æ–∑–≤–æ–ª—è–µ—Ç –≤–≤–æ–¥–∏—Ç—å –Ω–æ–ª—å
- Returns: –í–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤–≤–µ—Å—Ç–∏ —á–∏—Å–ª–æ –µ—â–µ —Ä–∞–∑
*/
func enterNumberUnsignedDoubleNoZero() -> Double {
   var answer:String // –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   var isDataPerfect: Bool // —Ñ–ª–∞–≥ –Ω—Ä–∞–≤–∏—Ç—Å—è –ª–∏ –Ω–∞–º –≤–≤–æ–¥–∏–º–∞—è —Å—Ç—Ä–æ–∫–∞
   // –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –∑–∞–ø–∏—Å–∏ Ascii –∫–æ–¥–∞ —Å–∏–º–≤–æ–ª–∞
   var temp: UInt8 // —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω—ã–π –±–µ–∑–∑–Ω–∞–∫–æ–≤—ã–π —Ç–∏–ø –∑–∞–Ω–∏–º–∞—é—â–∏–π 8 –±–∏—Ç, –º–æ–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å [0,255], —Ç–æ –µ—Å—Ç—å 2 –≤ –≤–æ—Å—å–º–æ–π —á–∏—Å–µ–ª
   var povtor:Int // –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–≤—Ç–æ—Ä–æ–≤ –∑–∞–ø—è—Ç–æ–π –∏ —Ç–æ—á–∫–∏ –≤ —Å—Ç—Ä–æ–∫–µ
   var index:Int // –∏–Ω–¥–µ–∫—Å —Å–∏–º–≤–æ–ª–∞ –≤ —Å—Ç—Ä–æ–∫–µ, —Ç–∞–∫ –∫–∞–∫ –≤ swift –Ω–µ–ª—å–∑—è –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ —Å–∏–º–≤–æ–ª—É –ø–æ –∏–Ω–¥–µ–∫—Å—É

   repeat{
       isDataPerfect = true
       print(" –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: ", terminator: "") // terminator - –ø–∞—Ä–∞–º–µ—Ç—Ä —Ç–æ–≥–æ, —á—Ç–æ –±—É–¥–µ—Ç –ø–æ—Å–ª–µ –ø–µ—á–∞—Ç–∏, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –Ω–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞ ("\n")

       answer = readLine()! // —á–∏—Ç–∞–µ—Ç –ø–æ—Ç–æ–∫ –≤–≤–æ–¥–∞ –∏ —Å–æ–∑–¥–∞–µ—Ç –æ–±—å–µ–∫—Ç —Ç–∏–ø–∞ Optional<String>
       
       // –µ—Å–ª–∏ –µ—Å–ª–∏ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π –≤–≤–æ–¥
       if answer.count > 20 {
           print(" ‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –í–≤–æ–¥ –∑–Ω–∞—á–µ–Ω–∏—è –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–µ–≤—ã—à–∞—Ç—å 20 —Å–∏–º–≤–æ–ª–æ–≤!")
           if answer.count % 10 == 1 && answer.count != 11 {
               print(" –í—ã –≤–≤–µ–ª–∏ \(answer.count) —Å–∏–º–≤–æ–ª")
           }
           else{
               if 1 < answer.count % 10 && answer.count % 10 < 5  && answer.count != 12 && answer.count != 13 && answer.count != 14{
                   print(" –í—ã –≤–≤–µ–ª–∏ \(answer.count) —Å–∏–º–≤–æ–ª–∞")
               }
               else{
                   print(" –í—ã –≤–≤–µ–ª–∏ \(answer.count) —Å–∏–º–≤–æ–ª–æ–≤")
               }
           }
           isDataPerfect = false
           continue /* –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –∏—Ç–µ—Ä–∞—Ü–∏—é —Ç–µ–ª–∞ —Ü–∏–∫–ª–∞ –±–µ–∑
            –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–µ–ª–∞ —Ü–∏–∫–ª–∞ */
       }
       /*    ---------------------------------------    */
       // –µ—Å–ª–∏ —Å–æ–¥–µ—Ä–∂–∏—Ç —á—Ç–æ-—Ç–æ –∫—Ä–æ–º–µ –Ω—É–∂–Ω—ã—Ö –Ω–∞–º —Å–∏–º–≤–æ–ª–æ–≤ 0123456789 -  48-57 || 44 - , 46 - .) || –µ—â–µ –ø—Ä–æ–±–µ–ª
       temp = 0 // –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –∑–∞–ø–∏—Å–∏ Ascii –∫–æ–¥–∞ —Å–∏–º–≤–æ–ª–∞
       povtor = 0 // –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–≤—Ç–æ—Ä–æ–≤ –∑–∞–ø—è—Ç–æ–π –∏ —Ç–æ—á–∫–∏ –≤ —Å—Ç—Ä–æ–∫–µ
       index = 0 // –∏–Ω–¥–µ–∫—Å —Å–∏–º–≤–æ–ª–∞ –≤ —Å—Ç—Ä–æ–∫–µ, —Ç–∞–∫ –∫–∞–∫ –≤ swift –Ω–µ–ª—å–∑—è –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ —Å–∏–º–≤–æ–ª—É –ø–æ –∏–Ω–¥–µ–∫—Å—É
       for char in answer {
           index += 1
           if(char.asciiValue != nil) {
               temp = char.asciiValue!
               // –µ—Å–ª–∏ –Ω–µ–ø–æ–¥—Ö–æ–¥—è—â–∏–π –Ω–∞–º –∑–Ω–∞–∫
               if !(temp != 47 && 46 <= temp && temp <= 57 || temp == 32 || temp == 44) {
                   print(" ‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –í–≤–æ–¥–∏—Ç—å –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ —á–∏—Å–ª–∞ –∏ –∑–Ω–∞–∫–∏:  '.' , ',' ")
                   isDataPerfect = false
                   break /* –≤—ã—Ö–æ–¥ –∏–∑ —Ü–∏–∫–ª–∞ */
               }
               // —Ç–æ—á–∫–∏ –∏ –∑–∞–ø—è—Ç—ã–µ –Ω–µ –¥–æ–ª–∂–Ω—ã –ø–æ–≤—Ç–æ—Ä—è—Ç—Å—è
               if temp == 44 || temp == 46 { povtor += 1 }
           }
           else {
               isDataPerfect = false
               print(" ‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –í–≤–æ–¥–∏—Ç—å –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ —á–∏—Å–ª–∞ –∏ –∑–Ω–∞–∫–∏: '.' , ',' !")
               break /* –≤—ã—Ö–æ–¥ –∏–∑ —Ü–∏–∫–ª–∞ */
           }
           // –µ—Å–ª–∏ –≤–≤–µ–ª–∏ —Ç–æ–ª—å–∫–æ . , - —Ç–æ –¥–æ–±–∞–≤–∏–º –∏–º –Ω–æ–ª—å
           if answer.count == 1 && ( temp == 44 || temp == 46){ answer.append("0")}
           // —Ç–æ—á–∫–∏ –∏ –∑–∞–ø—è—Ç—ã–µ –Ω–µ –¥–æ–ª–∂–Ω—ã –ø–æ–≤—Ç–æ—Ä—è—Ç—Å—è –±–æ–ª—å—à–µ –æ–¥–Ω–æ–≥–æ —Ä–∞–∑–∞
           if povtor > 1 {
               print(" ‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –ú–æ–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ —Ç–æ–ª—å–∫–æ –æ–¥–Ω—É –∑–∞–ø—è—Ç—É—é –∏–ª–∏ —Ç–æ—á–∫—É!")
               print(" –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑, —É –≤–∞—Å –ø–æ–ª—É—á–∏—Ç—Å—è!")
               isDataPerfect = false
               continue /* –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –∏—Ç–µ—Ä–∞—Ü–∏—é —Ç–µ–ª–∞ —Ü–∏–∫–ª–∞ –±–µ–∑
                –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–µ–ª–∞ —Ü–∏–∫–ª–∞ */
           }
       }
       // –µ—Å–ª–∏ –Ω–∞–ø–∏—Å–∞–ª–∏ —á–∏—Å–ª–æ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é
       if answer.contains(",") {
           answer = answer.replacingOccurrences(of: ",", with: ".")
       }
       // –µ—Å–ª–∏ –Ω–∞–ø–∏—Å–∞–ª–∏ —á–∏—Å–ª–æ —Å –ø—Ä–æ–±–µ–ª–∞–º–∏
       if answer.contains(" ") {
           answer = answer.replacingOccurrences(of: " ", with: "")
       }
       // –µ—Å–ª–∏ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π –≤–≤–æ–¥
       if answer.count < 1 {
           print(" ‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –í—ã –≤–æ–æ–±—â–µ –Ω–∏—á–µ–≥–æ –Ω–µ –≤–≤–µ–ª–∏ !")
           print(" –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑, —É –≤–∞—Å –ø–æ–ª—É—á–∏—Ç—Å—è !")
           isDataPerfect = false
           continue /* –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –∏—Ç–µ—Ä–∞—Ü–∏—é —Ç–µ–ª–∞ —Ü–∏–∫–ª–∞ –±–µ–∑
            –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–µ–ª–∞ —Ü–∏–∫–ª–∞ */
        }
        if isDataPerfect && Double(answer) == nil {
            print(" üõë –û—à–∏–±–∫–∞: –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏ –≤–≤–æ–¥–∞")
        }
        // –µ—Å–ª–∏ –≤–≤–µ–ª–∏ –Ω–æ–ª—å
        if isDataPerfect && Double(answer)! == 0 {
            print(" ‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –ù–µ–ª—å–∑—è –∑–∞–¥–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä —Ä–∞–≤–Ω—ã–π –Ω—É–ª—é !")
            print(" –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑, —É –≤–∞—Å –ø–æ–ª—É—á–∏—Ç—Å—è !")
            isDataPerfect = false
            continue /* –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –∏—Ç–µ—Ä–∞—Ü–∏—é —Ç–µ–ª–∞ —Ü–∏–∫–ª–∞ –±–µ–∑
            –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–µ–ª–∞ —Ü–∏–∫–ª–∞ */
        }
   }
   while !isDataPerfect // –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤ —Å–ª—É—á–∞–µ –ø–ª–æ—Ö–∏—Ö –¥–∞–Ω–Ω—ã—Ö

   print(" üü¢ –í–∞—à–µ —á–∏—Å–ª–æ: \(Double(answer)! )")
   return Double(answer)! // –ø–µ—Ä–µ–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–∞–ª—å—à–µ, –≤ –≤–∏–¥–µ —Ç–∏–ø–∞ Double
}
/**
–§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤–≤–µ–¥–µ–Ω–Ω–æ–µ –∏–º —á–∏—Å–ª–æ —Ç–∏–ø–∞ Double
- Warning: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞, –≤–≤–æ–¥–∏–º–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —á–∏—Å–ª–∞: 20
- Warning: –ü–æ–∑–≤–æ–ª—è–µ—Ç –≤–≤–æ–¥–∏—Ç—å –Ω–æ–ª—å
- Returns: –í–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤–≤–µ—Å—Ç–∏ —á–∏—Å–ª–æ –µ—â–µ —Ä–∞–∑
*/
func enterNumberDouble() -> Double {
   var answer:String // –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   var isDataPerfect: Bool // —Ñ–ª–∞–≥ –Ω—Ä–∞–≤–∏—Ç—Å—è –ª–∏ –Ω–∞–º –≤–≤–æ–¥–∏–º–∞—è —Å—Ç—Ä–æ–∫–∞
   // –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –∑–∞–ø–∏—Å–∏ Ascii –∫–æ–¥–∞ —Å–∏–º–≤–æ–ª–∞
   var temp: UInt8 // —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω—ã–π –±–µ–∑–∑–Ω–∞–∫–æ–≤—ã–π —Ç–∏–ø –∑–∞–Ω–∏–º–∞—é—â–∏–π 8 –±–∏—Ç, –º–æ–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å [0,255], —Ç–æ –µ—Å—Ç—å 2 –≤ –≤–æ—Å—å–º–æ–π —á–∏—Å–µ–ª
   var povtor:Int // –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–≤—Ç–æ—Ä–æ–≤ –∑–∞–ø—è—Ç–æ–π –∏ —Ç–æ—á–∫–∏ –≤ —Å—Ç—Ä–æ–∫–µ
   var index:Int // –∏–Ω–¥–µ–∫—Å —Å–∏–º–≤–æ–ª–∞ –≤ —Å—Ç—Ä–æ–∫–µ, —Ç–∞–∫ –∫–∞–∫ –≤ swift –Ω–µ–ª—å–∑—è –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ —Å–∏–º–≤–æ–ª—É –ø–æ –∏–Ω–¥–µ–∫—Å—É

   repeat{
       isDataPerfect = true
       print(" –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: ", terminator: "") // terminator - –ø–∞—Ä–∞–º–µ—Ç—Ä —Ç–æ–≥–æ, —á—Ç–æ –±—É–¥–µ—Ç –ø–æ—Å–ª–µ –ø–µ—á–∞—Ç–∏, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –Ω–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞ ("\n")

       answer = readLine()! // —á–∏—Ç–∞–µ—Ç –ø–æ—Ç–æ–∫ –≤–≤–æ–¥–∞ –∏ —Å–æ–∑–¥–∞–µ—Ç –æ–±—å–µ–∫—Ç —Ç–∏–ø–∞ Optional<String>
       
       // –µ—Å–ª–∏ –µ—Å–ª–∏ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π –≤–≤–æ–¥
       if answer.count > 20 {
           print(" ‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –í–≤–æ–¥ –∑–Ω–∞—á–µ–Ω–∏—è –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–µ–≤—ã—à–∞—Ç—å 15 —Å–∏–º–≤–æ–ª–æ–≤!")
           if answer.count % 10 == 1 && answer.count != 11 {
               print(" –í—ã –≤–≤–µ–ª–∏ \(answer.count) —Å–∏–º–≤–æ–ª")
           }
           else{
               if 1 < answer.count % 10 && answer.count % 10 < 5  && answer.count != 12 && answer.count != 13 && answer.count != 14{
                   print(" –í—ã –≤–≤–µ–ª–∏ \(answer.count) —Å–∏–º–≤–æ–ª–∞")
               }
               else{
                   print(" –í—ã –≤–≤–µ–ª–∏ \(answer.count) —Å–∏–º–≤–æ–ª–æ–≤")
               }
           }
           isDataPerfect = false
           continue /* –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –∏—Ç–µ—Ä–∞—Ü–∏—é —Ç–µ–ª–∞ —Ü–∏–∫–ª–∞ –±–µ–∑
            –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–µ–ª–∞ —Ü–∏–∫–ª–∞ */
       }
       /*    ---------------------------------------    */
       // –µ—Å–ª–∏ —Å–æ–¥–µ—Ä–∂–∏—Ç —á—Ç–æ-—Ç–æ –∫—Ä–æ–º–µ –Ω—É–∂–Ω—ã—Ö –Ω–∞–º —Å–∏–º–≤–æ–ª–æ–≤ 0123456789 -  48-57 || 44-46 (, - .) || –µ—â–µ –ø—Ä–æ–±–µ–ª
       temp = 0 // –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –∑–∞–ø–∏—Å–∏ Ascii –∫–æ–¥–∞ —Å–∏–º–≤–æ–ª–∞
       povtor = 0 // –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–≤—Ç–æ—Ä–æ–≤ –∑–∞–ø—è—Ç–æ–π –∏ —Ç–æ—á–∫–∏ –≤ —Å—Ç—Ä–æ–∫–µ
       index = 0 // –∏–Ω–¥–µ–∫—Å —Å–∏–º–≤–æ–ª–∞ –≤ —Å—Ç—Ä–æ–∫–µ, —Ç–∞–∫ –∫–∞–∫ –≤ swift –Ω–µ–ª—å–∑—è –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ —Å–∏–º–≤–æ–ª—É –ø–æ –∏–Ω–¥–µ–∫—Å—É
       for char in answer {
           index += 1
           if(char.asciiValue != nil) {
               temp = char.asciiValue!
               // –µ—Å–ª–∏ –Ω–µ–ø–æ–¥—Ö–æ–¥—è—â–∏–π –Ω–∞–º –∑–Ω–∞–∫
               if !(temp != 47 && 44 <= temp && temp <= 57 || temp == 32) {
                   print(" ‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –í–≤–æ–¥–∏—Ç—å –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–∞ –∏ –∑–Ω–∞–∫–∏: '-' , '.' , ',' ")
                   isDataPerfect = false
                   break /* –≤—ã—Ö–æ–¥ –∏–∑ —Ü–∏–∫–ª–∞ */
               }
               // —Ç–æ—á–∫–∏ –∏ –∑–∞–ø—è—Ç—ã–µ –Ω–µ –¥–æ–ª–∂–Ω—ã –ø–æ–≤—Ç–æ—Ä—è—Ç—Å—è
               if temp == 44 || temp == 46 { povtor += 1 }
               // –µ—Å–ª–∏ –¥–µ—Ñ–∏—Å –Ω–µ –Ω–∞ –ø–µ—Ä–≤–æ–º –º–µ—Å—Ç–µ
               if temp == 45 && index > 1 {
                   print(" ‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –°–∏–º–≤–æ–ª '-' –¥–æ–ª–∂–µ–Ω —Å—Ç–æ—è—Ç—å –≤ –Ω–∞—á–∞–ª–µ —Å—Ç—Ä–æ–∫–∏ –∏ –Ω–µ –¥–æ–ª–∂–µ–Ω –ø–æ–≤—Ç–æ—Ä—è—Ç—å—Å—è")
                   isDataPerfect = false
                   break /* –≤—ã—Ö–æ–¥ –∏–∑ —Ü–∏–∫–ª–∞ */
               }
           }
           else {
               isDataPerfect = false
               print(" ‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –í–≤–æ–¥–∏—Ç—å –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–∞ –∏ –∑–Ω–∞–∫–∏: '-' , '.' , ',' !")
               break /* –≤—ã—Ö–æ–¥ –∏–∑ —Ü–∏–∫–ª–∞ */
           }
           // –µ—Å–ª–∏ –≤–≤–µ–ª–∏ —Ç–æ–ª—å–∫–æ . , - —Ç–æ –¥–æ–±–∞–≤–∏–º –∏–º –Ω–æ–ª—å
           if answer.count == 1 && (temp == 45 || temp == 44 || temp == 46){ answer.append("0")}
           // —Ç–æ—á–∫–∏ –∏ –∑–∞–ø—è—Ç—ã–µ –Ω–µ –¥–æ–ª–∂–Ω—ã –ø–æ–≤—Ç–æ—Ä—è—Ç—Å—è –±–æ–ª—å—à–µ –æ–¥–Ω–æ–≥–æ —Ä–∞–∑–∞
           if povtor > 1 {
               print(" ‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –ú–æ–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ —Ç–æ–ª—å–∫–æ –æ–¥–Ω—É –∑–∞–ø—è—Ç—É—é –∏–ª–∏ —Ç–æ—á–∫—É!")
               print(" –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑, —É –≤–∞—Å –ø–æ–ª—É—á–∏—Ç—Å—è!")
               isDataPerfect = false
               continue /* –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –∏—Ç–µ—Ä–∞—Ü–∏—é —Ç–µ–ª–∞ —Ü–∏–∫–ª–∞ –±–µ–∑
                –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–µ–ª–∞ —Ü–∏–∫–ª–∞ */
           }
       }
       // –µ—Å–ª–∏ –Ω–∞–ø–∏—Å–∞–ª–∏ —á–∏—Å–ª–æ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é
       if answer.contains(",") {
           answer = answer.replacingOccurrences(of: ",", with: ".")
       }
       // –µ—Å–ª–∏ –Ω–∞–ø–∏—Å–∞–ª–∏ —á–∏—Å–ª–æ —Å –ø—Ä–æ–±–µ–ª–∞–º–∏
       if answer.contains(" ") {
           answer = answer.replacingOccurrences(of: " ", with: "")
       }
       // –µ—Å–ª–∏ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π –≤–≤–æ–¥
       if answer.count < 1 {
           print(" ‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –í—ã –≤–æ–æ–±—â–µ –Ω–∏—á–µ–≥–æ –Ω–µ –≤–≤–µ–ª–∏ !")
           print(" –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑, —É –≤–∞—Å –ø–æ–ª—É—á–∏—Ç—Å—è !")
           isDataPerfect = false
           continue /* –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –∏—Ç–µ—Ä–∞—Ü–∏—é —Ç–µ–ª–∞ —Ü–∏–∫–ª–∞ –±–µ–∑
            –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–µ–ª–∞ —Ü–∏–∫–ª–∞ */
       }
       if isDataPerfect && Double(answer) == nil {
           print(" üõë –û—à–∏–±–∫–∞: –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏ –≤–≤–æ–¥–∞")
       }
   }
   while !isDataPerfect // –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤ —Å–ª—É—á–∞–µ –ø–ª–æ—Ö–∏—Ö –¥–∞–Ω–Ω—ã—Ö

   // —É–±–∏—Ä–∞–µ–º –º–∏–Ω—É—Å –ø–µ—Ä–µ–¥ –Ω—É–ª–µ–º
   if Double(answer)! == 0 && answer.contains("-") {
       answer = answer.replacingOccurrences(of: "-", with: "")
   }
   print(" üü¢ –í–∞—à–µ —á–∏—Å–ª–æ: \(Double(answer)! )")
   return Double(answer)! // –ø–µ—Ä–µ–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–∞–ª—å—à–µ, –≤ –≤–∏–¥–µ —Ç–∏–ø–∞ Double
}
/*    ------------ –§—É–Ω–∫—Ü–∏–∏ –∑–∞–ø—É—Å–∫–∞ –∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π -------------    */
/**
 –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—ã—Ä–∞–∂–µ–Ω–∏—è —Å –∫–æ—Ç–æ—Ä—ã–º —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º–∞
 - Parameters:
    - labName: –ò–º—è –ø–∞–ø–∫–∏ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–æ–π —Ä–∞–±–æ—Ç—ã
 - Throws: –í—ã–¥–∞–µ—Ç –æ—à–∏–±–∫—É –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —Ñ–∞–π–ª–∞
 */
func shellCommandStart (labName:String) {
    let task = Process() // –æ–±—å–µ–∫—Ç –ø–æ–∑–≤–æ–ª—è—é—â–∏–π –∑–∞–ø—É—Å–∫–∞—Ç—å –¥—Ä—É–≥—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø–æ–¥–ø—Ä–æ—Ü–µ—Å—Å–∞ (–ø–æ–¥–ø—Ä–æ–≥—Ä–º–∞–º–º—ã, –∏–º–µ–µ—Ç —Å–≤–æ–∏ –ø–æ—Ç–æ–∫–∏ –≤–≤–æ–¥–∞ –≤—ã–≤–æ–¥–∞ –∏ –ø–æ—Ç–æ–∫–∏ –æ—à–∏–±–æ–∫
    task.launchPath = "/usr/bin/open" // –ø—É—Ç—å –∫ –∏—Å–ø–æ–ª–Ω—è–µ–º–æ–º—É —Ñ–∞–π–ª—É, –∫–æ—Ç–æ—Ä—ã–π –º—ã —Ö–æ—Ç–∏–º –∑–∞–ø—É—Å—Ç–∏—Ç—å
    task.arguments = ["/Users/mishamisha/myProgramms/labsFtiSem4/\(labName)/\(labName)/expressionPhoto\(labName).png"] // –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ —Å–∏—Å—Ç–µ–º–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∏—Å–ø–æ–ª–Ω—è–µ–º–æ–≥–æ —Ñ–∞–π–ª–∞
    
    task.launch() // –∑–∞–ø—É—Å–∫–∞–µ—Ç –ø–æ–¥–ø—Ä–æ—Ü–µ—Å—Å
    task.waitUntilExit() // –ø–µ—Ä–µ–¥–∞–µ—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ—Ç–æ–∫–∞–º–∏ —Ä–æ–¥–∏—Ç–µ–ª—é –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –ª–∏ –¥–æ —Å–∏—Ö –ø–æ—Ä —Ä–æ–¥–∏—Ç–µ–ª—å
}
/**
 –§—É–Ω–∫—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—ã—Ä–∞–∂–µ–Ω–∏—è —Å –∫–æ—Ç–æ—Ä—ã–º —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º–∞
 - Warning: –ó–∞–∫—Ä—ã–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—Å–µ –æ–∫–Ω–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø—Ä–æ—Å–º–æ—Ç—Ä
 */
func shellCommandStop() {
    let photoHideProcess = Process() // –æ–±—å–µ–∫—Ç –ø–æ–∑–≤–æ–ª—è—é—â–∏–π –∑–∞–ø—É—Å–∫–∞—Ç—å –¥—Ä—É–≥—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø–æ–¥–ø—Ä–æ—Ü–µ—Å—Å–∞ (–ø–æ–¥–ø—Ä–æ–≥—Ä–º–∞–º–º—ã), –∏–º–µ–µ—Ç —Å–≤–æ–∏ –ø–æ—Ç–æ–∫–∏ –≤–≤–æ–¥–∞ –≤—ã–≤–æ–¥–∞ –∏ –ø–æ—Ç–æ–∫–∏ –æ—à–∏–±–æ–∫
    photoHideProcess.launchPath = "/usr/bin/killall" // –ø—É—Ç—å –∫ –∏—Å–ø–æ–ª–Ω—è–µ–º–æ–º—É —Ñ–∞–π–ª—É, –∫–æ—Ç–æ—Ä—ã–π –º—ã —Ö–æ—Ç–∏–º –∑–∞–ø—É—Å—Ç–∏—Ç—å
    photoHideProcess.arguments = ["Preview"] // –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ —Å–∏—Å—Ç–µ–º–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∏—Å–ø–æ–ª–Ω—è–µ–º–æ–≥–æ —Ñ–∞–π–ª–∞

    photoHideProcess.launch() // –∑–∞–ø—É—Å–∫–∞–µ—Ç –ø–æ–¥–ø—Ä–æ—Ü–µ—Å—Å
    photoHideProcess.waitUntilExit() // –ø–µ—Ä–µ–¥–∞–µ—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ—Ç–æ–∫–∞–º–∏ —Ä–æ–¥–∏—Ç–µ–ª—é –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –ª–∏ –¥–æ —Å–∏—Ö –ø–æ—Ä —Ä–æ–¥–∏—Ç–µ–ª—å
}
/*    --------------------------    */
/**
 –§—É–Ω–∫—Ü–∏—è –≤—ã–±–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –ª–∏ —Ä–∞–±–æ—Ç—É –ø—Ä–æ–≥—Ä–∞–º–º—ã
 - Returns: true or false. True-–≥–æ—Ç–æ–≤ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å, False-–Ω–µ –≥–æ—Ç–æ–≤ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å  , –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤–≤–µ—Å—Ç–∏ –æ—Ç–≤–µ—Ç –µ—â–µ —Ä–∞–∑
 */
func isRepiat() -> Bool {
    var answer:String // –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    var isDataPerfect: Bool // —Ñ–ª–∞–≥ –Ω—Ä–∞–≤–∏—Ç—Å—è –ª–∏ –Ω–∞–º –≤–≤–æ–¥–∏–º–∞—è —Å—Ç—Ä–æ–∫–∞
    repeat{
        isDataPerfect = true
        print("\n –•–æ—Ç–∏—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É –µ—â–µ —Ä–∞–∑ ?")
        print(" üü¢(1) –î–∞")
        print(" üî¥(0) –ù–µ—Ç")
        print(" –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: ", terminator: "") // terminator - –ø–∞—Ä–∞–º–µ—Ç—Ä —Ç–æ–≥–æ, —á—Ç–æ –±—É–¥–µ—Ç –ø–æ—Å–ª–µ –ø–µ—á–∞—Ç–∏, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –Ω–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞ ("\n")
        answer = readLine()! // —á–∏—Ç–∞–µ—Ç –ø–æ—Ç–æ–∫ –≤–≤–æ–¥–∞ –∏ —Å–æ–∑–¥–∞–µ—Ç –æ–±—å–µ–∫—Ç —Ç–∏–ø–∞ Optional<String>
        
        // –µ—Å–ª–∏ –µ—Å–ª–∏ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π –≤–≤–æ–¥
        if answer.count < 1 {
            print(" ‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –í—ã –≤–æ–æ–±—â–µ –Ω–∏—á–µ–≥–æ –Ω–µ –≤–≤–µ–ª–∏ !!!")
            print(" –ù–∞–ø–æ–º–∏–Ω–∞—é, –Ω—É–∂–Ω–æ —á–∏—Å–ª–æ 1 –∏–ª–∏ 0!")
            print(" –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑, —É –≤–∞—Å –ø–æ–ª—É—á–∏—Ç—Å—è!")
            isDataPerfect = false
            continue /* –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –∏—Ç–µ—Ä–∞—Ü–∏—é —Ç–µ–ª–∞ —Ü–∏–∫–ª–∞ –±–µ–∑
             –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–µ–ª–∞ —Ü–∏–∫–ª–∞ */
        }
        // –µ—Å–ª–∏ –µ—Å–ª–∏ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π –≤–≤–æ–¥, –µ—â–µ —Ç—É—Ç –≤—ã–±–æ—Ä –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Ñ–æ—Ä–º—ã —Å–ª–æ–≤–∞ —Å–∏–º–≤–æ–ª
        if answer.count > 1 {
            print(" ‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –í–≤–æ–¥ —á–∏—Å–µ–ª 1 –∏ 0 —Å–æ–¥–µ—Ä–∂–∏—Ç —è–≤–Ω–æ –º–µ–Ω—å—à–µ —Å–∏–º–≤–æ–ª–æ–≤, —á–µ–º –≤—ã –≤–≤–µ–ª–∏")
            if answer.count % 10 == 1 && answer.count != 11 {
                print(" –í—ã –≤–≤–µ–ª–∏ \(answer.count) —Å–∏–º–≤–æ–ª")
            }
            else{
                if 1 < answer.count % 10 && answer.count % 10 < 5  && answer.count != 12 && answer.count != 13 && answer.count != 14{
                    print(" –í—ã –≤–≤–µ–ª–∏ \(answer.count) —Å–∏–º–≤–æ–ª–∞")
                }
                else{
                    print(" –í—ã –≤–≤–µ–ª–∏ \(answer.count) —Å–∏–º–≤–æ–ª–æ–≤")
                }
            }
            isDataPerfect = false
            continue /* –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –∏—Ç–µ—Ä–∞—Ü–∏—é —Ç–µ–ª–∞ —Ü–∏–∫–ª–∞ –±–µ–∑
             –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–µ–ª–∞ —Ü–∏–∫–ª–∞ */
        }
        // –µ—Å–ª–∏ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–∏ —Ç–æ–≥–æ –Ω–∏ –¥—Ä—É–≥–æ–≥–æ
        if !answer.contains("1") && !answer.contains("0") {
            print(" ‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –ù—É–∂–Ω–æ —á–∏—Å–ª–æ 1 –∏–ª–∏ 0!")
            print(" –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑, —É –≤–∞—Å –ø–æ–ª—É—á–∏—Ç—Å—è!")
            isDataPerfect = false
            continue /* –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –∏—Ç–µ—Ä–∞—Ü–∏—é —Ç–µ–ª–∞ —Ü–∏–∫–ª–∞ –±–µ–∑
             –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–µ–ª–∞ —Ü–∏–∫–ª–∞ */
        }
    }
    while !isDataPerfect // –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤ —Å–ª—É—á–∞–µ –ø–ª–æ—Ö–∏—Ö –¥–∞–Ω–Ω—ã—Ö || ! - –æ–ø–µ—Ä–∞—Ç–æ—Ä –Ω–µ

    print()
    return Bool( truncating: Int(answer)! as NSNumber) // ! - –æ–ø–µ—Ä–∞—Ç–æ—Ä –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ –∑–Ω–∞—á–µ–Ω–∏—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ || as - –¥–ª—è –≤–æ—Å—Ö–æ–¥—è—â–µ–≥–æ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è —Ç–∏–ø–æ–≤ || NSNumber - –∫–ª–∞—Å—Å –æ–±–µ—Ä—Ç–∫–∞ –¥–ª—è –≤—Å–µ—Ö —á–∏—Å–ª–µ–Ω–Ω—ã—Ö —Ç–∏–ø–æ–≤ –∏–º–µ—é—â–∏–π –º–µ—Ç–æ–¥—ã —Å—Ä–∞–≤–Ω–µ–Ω–∏—è || truncating - –ø–∞—Ä–º–µ—Ç—Ä –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ , –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ || Bool() —è–≤–Ω–æ–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ to Bool || return –≤–æ–∑–≤—Ä–∞—Ç –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏
}
/*    --------------------------    */
